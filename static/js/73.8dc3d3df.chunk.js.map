{"version":3,"file":"static/js/73.8dc3d3df.chunk.js","mappings":"uQAGaA,GAAcC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sRAaXE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8cAuBTI,EAAQJ,EAAAA,GAAAA,MAAH,6C,uCC/BZK,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,IAAI,EAAjB,sCAA0DC,WAChEC,MAAOL,EAAAA,KAAaK,MAAb,uCAA0DD,WACjEE,SAAUN,EAAAA,KAAaG,IAAI,EAAjB,0CAA8DC,aAG/DG,EAAe,WACxB,IAAMC,GAAUC,EAAAA,EAAAA,MAQVC,EAAY,mCAAG,WAAOC,EAAP,0EAAcC,EAAd,EAAcA,UAC/BJ,EAAQK,EAAAA,EAAAA,OAAeF,IACvBC,IAFiB,2CAAH,wDAKlB,OACI,SAAC,KAAD,CAAQE,cAZU,CAClBZ,KAAM,GACNG,MAAO,GACPC,SAAU,IAUVS,iBAAkBhB,EAClBiB,SAAUN,EAFV,UAII,UAACjB,EAAD,YACI,SAACK,EAAD,CAAOmB,QAAQ,OAAf,oBACI,SAACrB,EAAD,CAAWsB,KAAK,OAAOhB,KAAK,UAC5B,SAAC,KAAD,CAAcA,KAAK,OAAOiB,UAAU,SACxC,SAACrB,EAAD,CAAOmB,QAAQ,QAAf,qBACI,SAACrB,EAAD,CAAWsB,KAAK,QAAQhB,KAAK,WAC7B,SAAC,KAAD,CAAcA,KAAK,QAAQiB,UAAU,SACzC,SAACrB,EAAD,CAAOmB,QAAQ,WAAf,wBACI,SAACrB,EAAD,CAAWsB,KAAK,WAAWhB,KAAK,cAChC,SAAC,KAAD,CAAcA,KAAK,WAAWiB,UAAU,SACxC,SAAC,IAAD,CAAKD,KAAK,SAASE,KAAK,iBCrC5C,EAJqB,WACjB,OAAO,SAACb,EAAD","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","Views/RegisterView.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\n\nexport const FormWrapper = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    background-color: #00000016;\n    border-radius: 20px;\n    padding: 15px;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const InputForm = styled(Field)`\n    border: none;\n    border-bottom: 2px solid black;\n    border-radius: 20px;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    width: 300px;\n\n    @media screen and (min-width: 768px) {\n        width: 450px;\n    };\n    padding: 5px 20px;\n\n    margin-bottom: 40px;\n\n    background-color: #0bc9cc;\n    transition: 250ms linear all;\n    &:focus, :hover {\n        background-color: #b8d1ce;\n        outline: none;\n    }\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n`;\n","import { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormWrapper, Label, InputForm } from \"./RegisterForm.styled\";\nimport { authAPI } from \"redux/authAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { Btn } from \"components/Buttons/Buttons\";\n\n\nconst schema = Yup.object().shape({\n    name: Yup.string().min(3, `Name must be at least 3 characters`).required(),\n    email: Yup.string().email(`Please, enter correct email address`).required(),\n    password: Yup.string().min(6, `Password must be at least 6 characters`).required(),\n});\n\nexport const RegisterForm = () => {\n    const dispath = useDispatch();\n    \n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n    };\n    \n    const handleSubmit = async (data, {resetForm}) => {\n        dispath(authAPI.singUp(data))\n        resetForm();\n    };\n\n    return (\n        <Formik initialValues={initialValues} \n        validationSchema={schema} \n        onSubmit={handleSubmit}> \n        \n            <FormWrapper>\n                <Label htmlFor=\"name\"> Name</Label>\n                    <InputForm type=\"text\" name=\"name\"/>\n                    <ErrorMessage name='name' component='div' />\n                <Label htmlFor=\"email\"> Email</Label>\n                    <InputForm type='email' name=\"email\"/>\n                    <ErrorMessage name='email' component='div' />\n                <Label htmlFor=\"password\"> Password</Label>\n                    <InputForm type='password' name=\"password\"/>\n                    <ErrorMessage name='password' component='div' />\n                    <Btn type=\"submit\" text='SignUp'/>\n            </FormWrapper>\n        </Formik>\n    )\n}","import { RegisterForm } from \"components/RegisterForm/RegisterForm\"\n\nconst RegisterView = () => {\n    return <RegisterForm/>\n};\n\nexport default RegisterView;\n\n"],"names":["FormWrapper","styled","Form","InputForm","Field","Label","schema","Yup","shape","name","min","required","email","password","RegisterForm","dispath","useDispatch","handleSubmit","data","resetForm","authAPI","initialValues","validationSchema","onSubmit","htmlFor","type","component","text"],"sourceRoot":""}