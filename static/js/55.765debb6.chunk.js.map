{"version":3,"file":"static/js/55.765debb6.chunk.js","mappings":"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","sources":["Views/ContactsView.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Views/ContactsView.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    @media screen and (max-width: 420px) {\n        display: block;\n        width: 360px;\n        margin: 0 auto; \n    }\n\n    @media screen and (max-width: 768px) {\n        display: block;\n        width: 100%;\n        margin: 0 auto; \n    }\n`;\n\nexport const ContactsContainer = styled.div`\n    margin-left: 40px;\n    @media screen and (max-width: 768px) {\n        margin-left: 0;\n    }\n`;\n\nexport const Title = styled.h3`\n  margin: 0 0 15px;\n`;","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\n\nexport const FormWrapper = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    max-height: 200px;\n    border: 1px solid black;\n    background-color: #00000016;\n    border-radius: 20px;\n    padding: 15px;\n    width: 330px;\n`;\n\nexport const InputForm = styled(Field)`\n    border: none;\n    border-bottom: 2px solid black;\n    border-radius: 20px;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    width: 290px;\n\n    padding: 5px 20px;\n\n    margin-bottom: 25px;\n\n    background-color: #0bc9cc;\n    transition: 250ms linear all;\n    &:focus, :hover {\n        background-color: #b8d1ce;\n        outline: none;\n    }\n`;\n\nexport const Label = styled.label`\n  font-weight: 700;\n`;","import { Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { FormWrapper, Label, InputForm } from \"./ContactForm.styled\";\nimport { useAddContactMutation, useGetContactsQuery } from \"redux/contactsAPI\";\nimport { toast } from 'react-toastify';\nimport { Btn } from \"components/Buttons/Buttons\";\n\n\nconst schema = Yup.object().shape({\n    name: Yup.string().matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/, `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`).required(),\n    number: Yup.string().matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +').required(),\n});\n\nexport const ContactForm = () => {\n    const [addContact, {isLoading}] = useAddContactMutation();\n    const {data: contacts} = useGetContactsQuery();\n    const initialValues = {\n        name: '',\n        number: '',\n    };\n    \n    const handleSubmit = async (data, {resetForm}) => {\n        const isDuplicate = contacts.map(a => a.name).includes(data.name);\n        if (isDuplicate) {\n        toast.warning(`${data.name} is already in your contacts`)\n        return\n        };\n        \n        const response = await addContact(data);\n        if(response.data?.name === data.name) {\n            toast(`${data.name} added to your contacts successfully`)\n        };\n        resetForm();\n    };\n\n    return (\n        <Formik initialValues={initialValues} \n        validationSchema={schema} \n        onSubmit={handleSubmit}> \n        \n            <FormWrapper>\n                <Label htmlFor=\"name\"> Name</Label>\n                    <InputForm type=\"text\" name=\"name\"/>\n                    <ErrorMessage name='name' component='div' />\n                <Label htmlFor=\"number\"> Number</Label>\n                    <InputForm type='tel' name=\"number\"/>\n                    <ErrorMessage name='number' component='div' />\n                <Btn type=\"submit\" disabled={isLoading} text='Add contact'/>\n            </FormWrapper>\n        </Formik>\n    )\n}\n","import styled from \"styled-components\";\nimport { AiFillPhone, AiFillIdcard } from \"react-icons/ai\";\n\n\nexport const P = styled.p`\n    display: flex;\n    align-items: center;\n    margin: 0;\n    padding-left: 15px;\n`;\n\nexport const Li = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n    background-color: #00000016;\n    border: 1px solid black;\n    border-radius: 20px;\n    padding: 5px;\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const PhoneIcon = styled(AiFillPhone)`\n  fill: #b8d1ce;\n  height: 20px;\n  width: 20px;\n  margin-right: 10px;\n`;\n\nexport const UserIcon = styled(AiFillIdcard)`\n  fill: #b8d1ce;\n  height: 20px;\n  width: 20px;\n  margin-right: 10px;\n`;\n","import PropTypes from \"prop-types\";\nimport { P, Li, ButtonsContainer, PhoneIcon, UserIcon } from \"./ContactListItem.styled\";\nimport { useDeleteContactMutation } from \"redux/contactsAPI\";\nimport { toast } from 'react-toastify';\nimport { ContactBtn } from \"components/Buttons/Buttons\";\nimport { useDispatch } from \"react-redux\";\nimport { setIdforEditModal } from \"redux/modalSlice\";\n\nexport const ContactListItem = ({id, name, number}) => {\n    const [deleteContact, {isLoading, isSuccess}] = useDeleteContactMutation();\n    const dispatch = useDispatch();\n    if(isSuccess) {\n        toast.success(`${name} delete from contacts successfully`)\n    };\n    \n    return (\n    <Li>\n        <div>\n        <P><UserIcon/>{name}</P>\n        <P><PhoneIcon/>{number}</P>\n        </div>\n\n        <ButtonsContainer>\n        <ContactBtn onClick={() => deleteContact(id)} disabled={isLoading} text=\"Delete\"/>\n        <ContactBtn onClick={() => dispatch(setIdforEditModal(id))} text=\"Edit\"/>\n        </ButtonsContainer> \n    </Li>\n    )\n\n};\n\nContactListItem.propTypes = {\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.node.isRequired,\n    };\n","import styled from \"styled-components\";\n\nexport const Ul = styled.ul`\n  margin: 0px;\n  padding: 0px;\n`;\n\n","import { ContactListItem } from \"components/ContactListItem/ContactListItem\";\nimport { useGetContactsQuery } from \"redux/contactsAPI\";\nimport { useSelector } from \"react-redux\";\nimport { getFilter } from \"redux/filterSlice\";\nimport { Ul } from \"./ContactList.styled\";\n\nexport const ContactList = () => {\n    const {data, isFetching, error} = useGetContactsQuery();\n    const filter = useSelector(getFilter);\n    const getFiltredContacts = () => {\n        const normalizedFilter = filter.toLowerCase();\n        return data?.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    };\n\n    const filteredContacts = getFiltredContacts();\n\n    const isAnyContactsToShow = filteredContacts?.length > 0;\n    const isNoMatches = filteredContacts?.length === 0;\n    \n    return (\n    <>\n    {isFetching && (<p>Loading your contacts, please wait</p>)}\n    {error && (<p>Sorry, something went wrong. Please refresh page</p>)}\n    {isAnyContactsToShow &&\n        <Ul>\n            { filteredContacts.map( contact => { \n            const {id, name, number} = contact;\n            return <ContactListItem key={id} id={id} name={name} number={number}/>;})\n            }\n        </Ul>}\n    {isNoMatches && <p>You dont have any contacts or matches</p>}\n    </>\n    );\n\n};\n\n\n","import styled from \"styled-components\";\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterInput = styled.input`\n    border: none;\n    border-bottom: 2px solid black;\n    border-radius: 20px;\n    margin-top: 10px;\n    margin-bottom: 20px;\n    width: 290px;\n\n    padding: 5px 20px;\n\n    margin-bottom: 25px;\n\n    background-color: #1b9395;\n    transition: 250ms linear all;\n    &:focus, :hover {\n        background-color: #b8d1ce;\n        outline: none;\n    }\n`;\n","import { FilterLabel, FilterInput } from \"./Filter.styled\";\nimport { setFilter, getFilter } from \"redux/filterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter)\n    return <FilterLabel htmlFor=\"filter\">Find contacts by name\n    <FilterInput type='text' name=\"filter\" onChange={e => dispatch(setFilter(e.target.value))} value={filter}/>\n    </FilterLabel>\n};\n\n\n","import { Container, ContactsContainer, Title } from \"./ContactsView.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\n\nconst ContactsView = () => {\n    return (\n    <Container>\n      <ContactForm/>\n      <ContactsContainer>\n      <Title>Contacts</Title>\n      <Filter/>\n      <ContactList/>\n      </ContactsContainer>\n    </Container>\n    );\n};\n\nexport default ContactsView;"],"names":["Container","styled","ContactsContainer","Title","FormWrapper","Form","InputForm","Field","Label","schema","Yup","shape","name","matches","required","number","ContactForm","useAddContactMutation","addContact","isLoading","contacts","useGetContactsQuery","data","handleSubmit","resetForm","map","a","includes","toast","response","initialValues","validationSchema","onSubmit","htmlFor","type","component","disabled","text","P","Li","ButtonsContainer","PhoneIcon","AiFillPhone","UserIcon","AiFillIdcard","ContactListItem","id","useDeleteContactMutation","deleteContact","isSuccess","dispatch","useDispatch","onClick","setIdforEditModal","Ul","ContactList","isFetching","error","filter","useSelector","getFilter","filteredContacts","normalizedFilter","toLowerCase","contact","getFiltredContacts","isAnyContactsToShow","length","isNoMatches","FilterLabel","FilterInput","Filter","onChange","e","setFilter","target","value"],"sourceRoot":""}